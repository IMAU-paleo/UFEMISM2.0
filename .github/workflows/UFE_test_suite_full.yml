# The full UFEMISM Test Suite

name: UFEMISM Test Suite (full)
run-name: ${{ github.actor }} - UFEMISM Test Suite (full)
on: workflow_dispatch

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:

    #  - name: Install nix
    #    uses: cachix/install-nix-action@v22

    #  - name: Get nix version
    #    run: |
    #      nix --version

    #  - name: Build UFEMISM with nix
    #    run: |
    #      nix build github:IMAU-paleo/UFEMISM2.0/${{github.sha}}?dir=tools/flake

      - name: Checkout UFEMISM repository
        uses: actions/checkout@v4

      - name: Check what we checked out
        run: |
          pwd
          ls -a

      - name: testerdetest
        run: |
          echo ${{github.workspace}}/src
          echo ~/src
          ls -a ${{github.workspace}}
          ls -a ~

    #  - uses: actions/cache/save@v3
    #    id: cache
    #    with:
    #      path: ${{github.workspace}}/src
    #      key: UFEMISM_build

      - uses: actions/cache@v2
        id: cache-tijn  # give it a name for checking the cache hit-or-not
        with:
          path: ${{github.workspace}}/src  # what we cache: the folder
          key: Tijns_cache_test

  run-unit-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:

   #   - uses: actions/cache/restore@v3
   #     id: restore-cache
   #     with:
   #       key: UFEMISM_build

      - uses: actions/cache@v2
        id: cache-tijn  # give it a name for checking the cache hit-or-not
        with:
          path: ${{github.workspace}}/src  # what we cache: the folder
          key: Tijns_cache_test

      - name: Check if we have it
        run: |
          ls -a
          ls src

    #  - name: Checkout UFEMISM repository
    #    uses: actions/checkout@v4

    #  - name: Install MATLAB
    #    uses: matlab-actions/setup-matlab@v2.2.0

    #  - name: Another MATLAB test
    #    uses: matlab-actions/run-command@v2
    #    with:
    #      command: disp('Hello world!')
